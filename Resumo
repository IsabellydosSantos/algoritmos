Resumo das Funções e Conceitos Básicos do Python

1. Estruturas Condicionais

if, elif, else

· Função: Controlar o fluxo do programa baseado em condições
· Estrutura:

```python
if condição1:
    # código se condição1 for True
elif condição2:
    # código se condição2 for True
else:
    # código se todas as condições forem False
```

Exemplo:

```python
idade = 18
if idade < 12:
    print("Criança")
elif idade < 18:
    print("Adolescente")
else:
    print("Adulto")
# Output: Adulto
```

2. Estruturas de Repetição

for

· Função: Iterar sobre sequências (listas, strings, etc.)
· Estrutura: for item in sequencia:

Exemplo:

```python
frutas = ["maçã", "banana", "laranja"]
for fruta in frutas:
    print(fruta)
# Output: maçã, banana, laranja
```

while

· Função: Executar bloco enquanto condição for True
· Estrutura: while condição:

Exemplo:

```python
contador = 0
while contador < 3:
    print(contador)
    contador += 1
# Output: 0, 1, 2
```

3. Funções para Sequências

range()

· Função: Gerar sequência numérica
· Estrutura: range(início, fim, passo)

Exemplo:

```python
# Gera números de 0 a 4
for i in range(5):
    print(i)
# Output: 0, 1, 2, 3, 4
```

len()

· Função: Retornar o tamanho de uma sequência
· Estrutura: len(sequencia)

Exemplo:

```python
lista = [1, 2, 3]
print(len(lista))  # Output: 3
```

4. Métodos de Listas

append()

· Função: Adicionar elemento ao final da lista

```python
lista = [1, 2]
lista.append(3)
print(lista)  # Output: [1, 2, 3]
```

insert()

· Função: Inserir elemento em posição específica

```python
lista = [1, 3]
lista.insert(1, 2)  # Insere 2 na posição 1
print(lista)  # Output: [1, 2, 3]
```

remove()

· Função: Remover primeira ocorrência do elemento

```python
lista = [1, 2, 3, 2]
lista.remove(2)
print(lista)  # Output: [1, 3, 2]
```

pop()

· Função: Remover e retornar elemento de posição específica

```python
lista = [1, 2, 3]
elemento = lista.pop(1)
print(elemento)  # Output: 2
print(lista)     # Output: [1, 3]
```

sort()

· Função: Ordenar lista in-place

```python
lista = [3, 1, 2]
lista.sort()
print(lista)  # Output: [1, 2, 3]
```

reverse()

· Função: Inverter ordem da lista

```python
lista = [1, 2, 3]
lista.reverse()
print(lista)  # Output: [3, 2, 1]
```

count()

· Função: Contar ocorrências de elemento

```python
lista = [1, 2, 2, 3]
print(lista.count(2))  # Output: 2
```

index()

· Função: Retornar índice da primeira ocorrência

```python
lista = [10, 20, 30]
print(lista.index(20))  # Output: 1
```

5. Funções Matemáticas

sum()

· Função: Somar elementos de uma sequência

```python
numeros = [1, 2, 3, 4]
print(sum(numeros))  # Output: 10
```

min() e max()

· Função: Retornar menor/maior elemento

```python
numeros = [5, 2, 8, 1]
print(min(numeros))  # Output: 1
print(max(numeros))  # Output: 8
```

6. Operador in

· Função: Verificar se elemento está em sequência

```python
lista = [1, 2, 3]
print(2 in lista)   # Output: True
print(4 in lista)   # Output: False
```

7. Tipos de Dados Básicos

int (inteiro)

```python
x = 10
y = int("5")  # Converte string para int
```

float (ponto flutuante)

```python
x = 3.14
y = float("2.5")  # Converte string para float
```

string (texto)

```python
nome = "Python"
frase = 'Hello World'
```

boolean (True/False)

```python
ativo = True
inativo = False
```

8. Símbolos Matemáticos

Operadores Aritméticos:

· + Adição: 5 + 3 = 8
· - Subtração: 5 - 3 = 2
· * Multiplicação: 5 * 3 = 15
· / Divisão: 5 / 2 = 2.5
· // Divisão inteira: 5 // 2 = 2
· % Módulo (resto): 5 % 2 = 1
· ** Exponenciação: 2 ** 3 = 8

Operadores de Comparação:

· == Igual a
· != Diferente de
· > Maior que
· < Menor que
· >= Maior ou igual
· <= Menor ou igual

Operadores Lógicos:

· and E lógico
· or OU lógico
· not NÃO lógico

Exemplo 
# Exemplo que usa várias funções
numeros = [5, 2, 8, 2, 1]

# Ordena a lista
numeros.sort()
print(f"Lista ordenada: {numeros}")  # [1, 2, 2, 5, 8]

# Adiciona elemento
numeros.append(3)
print(f"Após append: {numeros}")  # [1, 2, 2, 5, 8, 3]

# Remove elemento
numeros.remove(2)
print(f"Após remove: {numeros}")  # [1, 2, 5, 8, 3]

# Soma os elementos
soma = sum(numeros)
print(f"Soma: {soma}")  # 19

# Verifica se número está na lista
if 5 in numeros:
    print("5 está na lista")

# Usando for com range
for i in range(len(numeros)):
    print(f"Posição {i}: {numeros[i]}")
