Resumo das Funções e Conceitos Básicos do Python

1. Estruturas Condicionais

if, elif, else

· Função: Controlar o fluxo do programa baseado em condições
· Estrutura:

if condição1:
    # código se condição1 for True
elif condição2:
    # código se condição2 for True
else:
    # código se todas as condições forem False


Exemplo:

idade = 18
if idade < 12:
    print("Criança")
elif idade < 18:
    print("Adolescente")
else:
    print("Adulto")
# Output: Adulto
# Output significa "saída", ou seja, qual será o resultado do programa


2. Estruturas de Repetição

for

· Função: Iterar sobre sequências (listas, strings, etc.)
· Estrutura: for item in sequencia:

Exemplo:

frutas = ["maçã", "banana", "laranja"]
for fruta in frutas:
    print(fruta)
# Output: maçã, banana, laranja


while

· Função: Executar bloco enquanto condição for True
· Estrutura: while condição:

Exemplo:

contador = 0
while contador < 3:
    print(contador)
    contador += 1
# Output: 0, 1, 2


3. Funções para Sequências

range()

· Função: Gerar sequência numérica
· Estrutura: range(início, fim, passo)

Exemplo:

# Gera números de 0 a 4
for i in range(5):
    print(i)
# Output: 0, 1, 2, 3, 4


len()

· Função: Retornar o tamanho de uma sequência
· Estrutura: len(sequencia)

Exemplo:

lista = [1, 2, 3]
print(len(lista))  # Output: 3


4. Métodos de Listas

append()

· Função: Adicionar elemento ao final da lista

lista = [1, 2]
lista.append(3)
print(lista)  # Output: [1, 2, 3]


insert()

· Função: Inserir elemento em posição específica

lista = [1, 3]
lista.insert(1, 2)  # Insere 2 na posição 1
print(lista)  # Output: [1, 2, 3]


remove()

· Função: Remover primeira ocorrência do elemento

lista = [1, 2, 3, 2]
lista.remove(2)
print(lista)  # Output: [1, 3, 2]


pop()

· Função: Remover e retornar elemento de posição específica

lista = [1, 2, 3]
elemento = lista.pop(1)
print(elemento)  # Output: 2
print(lista)     # Output: [1, 3]


sort()

· Função: Ordenar lista em ordem crescente 

lista = [3, 1, 2]
lista.sort()
print(lista)  # Output: [1, 2, 3]


reverse()

· Função: Inverter ordem da lista

lista = [1, 2, 3]
lista.reverse()
print(lista)  # Output: [3, 2, 1]


count()

· Função: Contar quantas vezes o elemento se repete 

lista = [1, 2, 2, 3]
print(lista.count(2))  # Output: 2


index()

· Função: Retornar posição da primeira aparição do elemento

lista = [10, 20, 30]
print(lista.index(20))  # Output: 1


5. Funções Matemáticas

sum()

· Função: Somar elementos de uma sequência

numeros = [1, 2, 3, 4]
print(sum(numeros))  # Output: 10


min() e max()

· Função: Retornar menor/maior elemento

numeros = [5, 2, 8, 1]
print(min(numeros))  # Output: 1
print(max(numeros))  # Output: 8


6. Operador in

· Função: Verificar se o elemento está na lista

lista = [1, 2, 3]
print(2 in lista)   # Output: True
print(4 in lista)   # Output: False


7. Tipos de Dados Básicos

int (inteiro)

x = 10 # Número inteiro
y = int("5")  # Converte string para int


float (não-inteiro)

x = 3.14 # Número decimal
y = float("2.5")  # Converte string para float


string (texto)

nome = "Python"
frase = 'Hello World'


boolean (True/False)
# Usado para responder sim ou não 
verdadeiro = True
falso = False


8. Símbolos Matemáticos

Operadores Aritméticos:

· + Adição: 5 + 3 = 8
· - Subtração: 5 - 3 = 2
· * Multiplicação: 5 * 3 = 15
· / Divisão: 5 / 2 = 2.5
· // Divisão inteira: 5 // 2 = 2
· % Módulo (resto): 5 % 2 = 1
· ** Exponenciação: 2 ** 3 = 8

Operadores de Comparação:

· == Igual a
· != Diferente de
· > Maior que
· < Menor que
· >= Maior ou igual
· <= Menor ou igual

Operadores Lógicos:

· and E lógico
· or OU lógico
· not NÃO lógico
